#############################################################
#   Dora_BF.py                                              #
#   Lindsay Von Tish (lmv9443@nyu.edu)                      #
#   Reverse Engineering 2: Dora                             #
#   02/14/2024                                              #
#############################################################

# Characters taken from the Dora memory map
test_chars = bytes([0x97, 0x46, 0x23, 0x34, 0x4d, 0x8a, 0xc4, 0x7e, 0x7c, 0x7c, 0x7c, 0x73, 0x79, 0x97, 0x47, 0x22, 0x34, 0xf5, 0xbb, 0xc6, 0x83, 0x7c, 0x7c, 0x7c, 0xc4, 0x7c, 0x7c, 0x7c, 0x7c, 0x73, 0x79, 0xc3, 0x7d, 0x7c, 0x7c, 0x7c, 0xc6, 0x83, 0x7c, 0x7c, 0x7c, 0xc4, 0x7d, 0x7c, 0x7c, 0x7c, 0x73, 0x79, 0xc3, 0x7c, 0x7c, 0x7c, 0x7c, 0xc4, 0x40, 0x7c, 0x7c, 0x7c, 0x73, 0x79, 0x94, 0xbd, 0x83, 0x83, 0x83, 0x1a, 0x10, 0x1d, 0x1b, 0x52, 0x8, 0x4, 0x8, 0x7c, 0x94, 0xbc, 0x83, 0x83, 0x83, 0x0])

# A function to xor all 255 characters with every byte in the array to see if we get usable data
#   Input: N/A
#   Output: The value that creates data with the word "flag" in it
def bruteForceMagic():
    for i in range(256):
        data = bytes(c ^ i for c in test_chars)
        if 'flag'.encode() in data:
            return i
    return -13

print(bruteForceMagic())